<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jktb.jiaktb.mapper.CarPhotoMapper">
    
    <resultMap type="CarPhoto" id="CarPhotoResult">
        <result property="carPhotoId"    column="car_photo_id"    />
        <result property="carInfoId"    column="car_info_id"    />
        <result property="photosId"    column="photos_id"    />
    </resultMap>

    <resultMap id="CarPhotoPhotosResult" type="CarPhoto" extends="CarPhotoResult">
        <collection property="photosList" notNullColumn="photos_id" javaType="java.util.List" resultMap="PhotosResult" />
    </resultMap>

    <resultMap type="Photos" id="PhotosResult">
        <result property="photosId"    column="photos_id"    />
        <result property="photosTitle"    column="photos_title"    />
        <result property="photosUri"    column="photos_uri"    />
        <result property="upTime"    column="up_time"    />
    </resultMap>

    <sql id="selectCarPhotoVo">
        select car_photo_id, car_info_id, photos_id from car_photo
    </sql>

    <select id="selectCarPhotoList" parameterType="CarPhoto" resultMap="CarPhotoResult">
        <include refid="selectCarPhotoVo"/>
        <where>  
            <if test="carInfoId != null "> and car_info_id = #{carInfoId}</if>
        </where>
    </select>
    
    <select id="selectCarPhotoById" parameterType="Long" resultMap="CarPhotoResult">
        select a.car_photo_id, a.car_info_id, a.photos_id
        from car_photo a
        where a.car_info_id = #{carInfoId}
    </select>
        
    <insert id="insertCarPhoto" parameterType="CarPhoto" useGeneratedKeys="true" keyProperty="carPhotoId">
        insert into car_photo
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="carInfoId != null">car_info_id,</if>
            <if test="photosId != null">photos_id,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="carInfoId != null">#{carInfoId},</if>
            <if test="photosId != null">#{photosId},</if>
         </trim>
    </insert>

    <update id="updateCarPhoto" parameterType="CarPhoto">
        update car_photo
        <trim prefix="SET" suffixOverrides=",">
            <if test="carInfoId != null">car_info_id = #{carInfoId},</if>
            <if test="photosId != null">photos_id = #{photosId},</if>
        </trim>
        where car_photo_id = #{carPhotoId}
    </update>

    <delete id="deleteCarPhotoById" parameterType="Long">
        delete from car_photo where car_photo_id = #{carPhotoId}
    </delete>

    <delete id="deleteCarPhotoByIds" parameterType="String">
        delete from car_photo where car_photo_id in 
        <foreach item="carPhotoId" collection="array" open="(" separator="," close=")">
            #{carPhotoId}
        </foreach>
    </delete>

    <delete id="deleteCarPhotoByCarInfoId" parameterType="Long">
        delete from car_photo where car_info_id = #{carInfoId}

    </delete>

    <delete id="deletePhotosByPhotosId" parameterType="Long">
        delete from photos where photos_id = #{photosId}
    </delete>

    <insert id="batchCarPhotos">
        insert into car_photo(car_info_id, photos_id) values
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.carInfoId}, #{item.photosId})
        </foreach>
    </insert>
</mapper>